guia de medidas do css: quando usar cada uma

1. px

uso recomendado:

Para tamanhos fixos é precisos que não devem variar com o tamanho da tela ou do texto.
ideal para bordas,margens e tamanhos de elementos que precisam manter uma aoarência consistente.

Quando eu devo evitar:

quando você deseja que o design seja mais flexivel a diferentes tamanhos de tela e configuraçoes de acessibilidade.

exemplo de uso:

html
div class="box"

div

css

.box{
    width:300px; /*largura fixa*/
    heinght:200px; /*altura fixa*/
    background-color:red;

}

2. em

uso recomendado:

Quando você deseja que o tamanho de um elemento seja relativo ao tamanho da fonte de seu elemento pai.
ideal para criar layouts e tipografia que se adaptam ao tamanho do texto do pai.

quando evitar:

se você presisa de consisteência em relação ao ramanho da fonte em toda a plicação,independente da hierarquia de elementos.

html
div class="container"

div class=child

div
div

css
container 
font-size: 16px; /*tamanho da base - pai*/


child
fonte - size: 1.5em; /*1.5 vezes o tamanho da fonte do pai (24px)*/


3. rem 

uso recomendado:

para criar tamanhos de fonte e espaçamentos consistentes em toda a aplicação, baseando-se no tamanho da fonte raiz (hrml)

ideal para layouts e tipografia que precisam ser consistentes independentemente so tamanho da fonte dos elementos do pais

quando evitar:

quando você quer um tamanho que seja relativo apenas ao ellemento pai específico e não à raiz.


exemplo de uso:

html

div class="container"

div class ="text"
p lorem p
div

div

css

html 

font-size:16px; /*tamanho base da fonte*/

text
font size:2rem; /*32(2*16px)*/

4.vh

uso recomendado :

para definir tamanhos de altura relativos à altura da viewport, com para criar seções de tela cheia ou elementos que devem ocupar uma porcentagem da altura da tela.
ideal para layouts que devem se ajustar à altura da tela do usuário.

quando evitar:

para elementos que não precisam ser sensíveis ao tamanho da viewport e devem ter tamanhos fixos ou proporcionais ao conteúdo.

Exemplo de uso:

html

section class="fullscreen-section"
p lorem p

section

testar em tamanhos de talas diferntes.

css
fullscreen-section
height: 100vh; /*100% da altura da viwerport*/
width:50vw
background-color:black;


5.vw

uso recomendado:

para definir tamanhos de largura relativos à largura da viewport, úril para criar layouts responsivos ou elementos que devem ajustar a largura de tela.
ideal para elementos que precisam ocupar uma porcentagem da largura da tela do usuário.

quando evitar:

para elementos cuja a largura não deve depender da largura da viwerport e deve ser fixa ou proporcional ao conteúdo.

exemplo de uso:

html 
section class="responsive-element"
p lorem p

section

css
responsive-element

width: 50vw; /*50% da largura da viewport*/
height:50vh;
background-color: yellow;


6.%

uso recomendado:

para definir tamanhos relativos ao tamanho do elemento pai , ideal para layouts flexíveis e adaptáveis.
útil para definir larguras e alturas de elementos dentro de containers com tamanhos variáveis.

quando evitar:

quando o tamanho não deve depender do elemento pai, esoecialmente se o elemento pai não tiver um tamanho fixo ou previsivel.

exemplo de uso:

html

div class="parent"

div class child
div
div

css

parent 

widt: 500px /*largura fix do pai*/
background-color: green


child

width:50%; /*50% da largura do elemento pai (250px)*/
background-color:pink;


