* {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.6;/*distancia entre linhas
    */

}

header {
    padding: 1rem;/*padding rem para consistência com o tamanho da fonte raiz*/
    background-color: rgb(77, 160, 255);
    text-align: center;
    color: white;
}

main{
    padding: 2rem;/*espaçamento interno da area principal*/
    color: white;
}

.section {
    padding: 2em;/*padding em, relativo ao tamanho da fonte do pai*/
    margin-bottom: 2em;/*espaço abaixo de cada seção*/
    border-radius: 10px;
    position:relative;/*O elemento é posicionado em relaçao á sua posição original.voce poder usar os atributos top,borrom e left para move-lo.*/
}

.section-1{
    background-color: red;
    color: white;
}

.section-2{
    background-color: chartreuse;
    color: white;
}

.section-3{
    background-color: orange;
    color: white;
}

.div{
    background-color: white;
    color: black;
    padding: 2rem;/*padding aumentado para maior visibilidade*/
    margin: 1rem;
    border-radius: 10px;
    text-align: center;
    font-size: 1.2rem;/*tamanho da fonte aumentado para maior legibilidade*/
    box-sizing: border-box;/*inclui padding e borda no cálculo da largura*/
}

.div-1, .div-2, .div-3, .div-4, .div-5, .div-6{
    width: calc(50% - 2rem);/*pese em duas caixas de frutas que voce quer colocar lado a lado na mesa. A largura de cada caixa é ajustada para que, junta, ocupem quase toda a mesa , mas deixando um espaço entre els (como se voce estivesse colocando um pano de prato entre as caixa).
    
    a expressão calc(50% - 2rem) significa que cada caixa ocupará metade da mesa, menos um espaço (2rem) que é o pano.*/

    float: left;/*é como se você estivesse empurrando as caixas para o lado esquerdo da mesa . issso faz com que, quando você coloca uma nova caixa, ela "desça" para a próxima linha, mantendo as outras caixas alinhadas.*/
}

/*limpeza do float*/

.section::after{
    content: "";/*adiciona um elemento invisivel apos o conteudo da seção
    isso cria um "espaço vazio" invisivel na sua festa. é como se voce colocasse uma pequena bandeja vazia na mesa, que ninguém vê, mas que ajuda a mater tudo organizado.
    
    essa propriedade é necessaria para criar um pseudo-elemento invisivel que ajuda a controlar i layaout. sem ela, o conteiner po não reconhecer que tem conteudo flutuante (as caixas de frutas), o que pode causar problemas na exibição.*/

    display: table;/*faz com que o elemento invisivel se comporte como bloco, forçando o conreiner a incluir elementos flutuantes 
    
    esse espaço vazio se compora como uma parte da mesa.
    ele age como um bloco, oque significa que ajuda a agrupar tudo que está na maesa, fazendo com que os itens ao resor se organizem melhor.
    
    ao fazer o elemento invisivel se comportar como uma tabela, você garante que ele atue como um bloco que mantem a estrutura do conteiner. isso ajuda a forçar o conteiner a "abraçar" todos os elementos flutuantes, evitando que eles "saíam" do espaço que deveriam ocupar.*/

    clear: both;/*garante que o conteiner limpe os elementos flutuantes, evitando problemas de layout
    
    isso garante que , apos as caixas de flutas (ou outros itens) na mesa, nada mais flutue ao lado. é como se voce estivesse dizendo: "depois da bandeja vazia, nada pode ficar ao lado; tudo deve ficar em uma noca linha." isso evita que a mesa fique desorganizada e os itens se sobreponham.
    
    essa propriedade é crucial para evitar sobreposições. sem o clear:both; o conteiner pode não se expandir pata uncluir todos os elementos flutuantes, fazendo com que o layout fique desorganizado. isso garante que, apos as caixas de frutas, novos itens comecem em uma nova linha, mantendo tudo limpo e organizado.*/
}

@media (min-width:1200px){
    .div{
        width: calc(33,333% - 2rem);/*largura de  33.333% para tres caixas por linha*/
    }
}

@media(max-width:768px){
    .div{
        width: calc(100% - 2rem);/*largura de 100% para duas caixas por linha*/
    }
}
